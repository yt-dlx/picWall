{
  "version": "1.0.4",
  "name": "picwall",
  "main": "expo-router/entry",
  "scripts": {
    "build:cloud:development:android": "eas build --profile development --platform android",
    "build:cloud:development:ios": "eas build --profile development --platform ios",
    "build:cloud:development": "eas build --profile development --platform all",
    "___placeholder": "=========================================",
    "build:cloud:local:android": "eas build --profile local --platform android",
    "build:cloud:local:ios": "eas build --profile local --platform ios",
    "build:cloud:local": "eas build --profile local --platform all",
    "____placeholder": "=============================",
    "build:cloud:preview": "eas build --profile preview --platform all",
    "build:cloud:preview:ios": "eas build --profile preview --platform ios",
    "build:cloud:preview:android": "eas build --profile preview --platform android",
    "_____placeholder": "============================================",
    "build:cloud:production": "eas build --profile production --platform all",
    "build:cloud:production:ios": "eas build --profile production --platform ios",
    "build:cloud:production:android": "eas build --profile production --platform android",
    "______placeholder": "================================================",
    "update-version": "node -e \"const fs = require('fs'); const updateVersion = (file, path) => { let json = JSON.parse(fs.readFileSync(file, 'utf-8')); let versionPath = path.split('.'); let version = versionPath.reduce((o, k) => o[k], json); let [major, minor, patch] = version.split('.').map(Number); version = [major, minor, patch + 1].join('.'); versionPath.reduce((o, k, i, a) => i === a.length - 1 ? o[k] = version : o[k], json); fs.writeFileSync(file, JSON.stringify(json, null, 2)); console.log(file, 'Updated version:', version); }; updateVersion('./package.json', 'version'); updateVersion('./app.json', 'expo.version');\"",
    "prodev": "npm run update-version && expo prebuild && cd android && ./gradlew assembleRelease && ./gradlew assembleDebug",
    "android": "expo run:android",
    "web": "expo start --web",
    "ios": "expo run:ios",
    "start": "expo start",
    "lint": "expo lint"
  },
  "dependencies": {
    "@expo/vector-icons": "^14.0.4",
    "@react-native-async-storage/async-storage": "^2.1.0",
    "@react-navigation/bottom-tabs": "^7.0.0",
    "@react-navigation/native": "^7.0.0",
    "expo": "~52.0.20",
    "expo-blur": "^14.0.1",
    "expo-constants": "~17.0.3",
    "expo-file-system": "^18.0.6",
    "expo-haptics": "~14.0.0",
    "expo-image": "^2.0.3",
    "expo-intent-launcher": "^12.0.1",
    "expo-linear-gradient": "^14.0.1",
    "expo-linking": "^7.0.3",
    "expo-media-library": "^17.0.4",
    "expo-router": "^4.0.14",
    "expo-screen-orientation": "^8.0.2",
    "expo-sharing": "^13.0.0",
    "expo-splash-screen": "~0.29.18",
    "expo-status-bar": "~2.0.0",
    "expo-symbols": "~0.2.0",
    "expo-system-ui": "~4.0.6",
    "expo-web-browser": "~14.0.1",
    "nativewind": "^4.1.23",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "react-native": "0.76.5",
    "react-native-awesome-alerts": "^2.0.0",
    "react-native-gesture-handler": "~2.20.2",
    "react-native-linear-gradient": "^2.8.3",
    "react-native-reanimated": "~3.16.1",
    "react-native-safe-area-context": "4.12.0",
    "react-native-screens": "~4.1.0",
    "react-native-svg": "^15.10.1",
    "react-native-web": "~0.19.13",
    "react-native-webview": "13.12.5",
    "rn-wallpapers": "^0.1.1",
    "tailwindcss": "^3.4.17",
    "uuid": "^11.0.3",
    "zustand": "^5.0.2"
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@types/react": "~18.3.12",
    "@types/react-test-renderer": "^18.3.0",
    "expo-dev-client": "^5.0.6",
    "react-test-renderer": "18.3.1",
    "typescript": "^5.3.3"
  },
  "private": true
}